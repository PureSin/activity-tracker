package com.example.kelvinma.activitytracker.util

import android.content.Context
import android.content.Intent
import android.net.Uri
import androidx.core.content.FileProvider
import com.example.kelvinma.activitytracker.data.AppDatabase
import java.io.File
import java.io.FileInputStream
import java.io.FileOutputStream
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

class DatabaseExporter(private val context: Context) {

    /**
     * Exports the SQLite database file and creates an email intent with the file attached
     */
    fun exportDatabaseViaEmail(recipientEmail: String): Intent? {
        return try {
            // Get the current database file
            val databasePath = context.getDatabasePath("activity_tracker_database")
            
            if (!databasePath.exists()) {
                Logger.e(Logger.TAG_DATABASE, "Database file not found at: ${databasePath.absolutePath}")
                return null
            }

            // Create export directory in app's private external files
            val exportDir = File(context.getExternalFilesDir(null), "exports")
            if (!exportDir.exists()) {
                exportDir.mkdirs()
            }

            // Create timestamped filename
            val timestamp = SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
            val exportFile = File(exportDir, "activity_tracker_export_$timestamp.db")

            // Copy database file to export location
            copyFile(databasePath, exportFile)

            // Get URI for sharing via FileProvider
            val fileUri: Uri = FileProvider.getUriForFile(
                context,
                "${context.packageName}.fileprovider",
                exportFile
            )

            // Create email intent
            val emailIntent = Intent(Intent.ACTION_SEND).apply {
                type = "application/vnd.sqlite3"
                putExtra(Intent.EXTRA_EMAIL, arrayOf(recipientEmail))
                putExtra(Intent.EXTRA_SUBJECT, "Activity Tracker Data Export - $timestamp")
                putExtra(Intent.EXTRA_TEXT, buildEmailBody(timestamp))
                putExtra(Intent.EXTRA_STREAM, fileUri)
                addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
            }

            Logger.i("DatabaseExporter", "Database export prepared for email: ${exportFile.absolutePath}")
            emailIntent

        } catch (e: Exception) {
            Logger.e("DatabaseExporter", "Failed to export database", e)
            null
        }
    }

    private fun copyFile(source: File, destination: File) {
        FileInputStream(source).use { input ->
            FileOutputStream(destination).use { output ->
                input.copyTo(output)
            }
        }
    }

    private fun buildEmailBody(timestamp: String): String {
        return """
            Activity Tracker Data Export
            
            Export Date: $timestamp
            
            This email contains your Activity Tracker session data as an SQLite database file.
            
            To analyze the data:
            1. Download the attached .db file
            2. Use SQLite browser tools like DB Browser for SQLite (https://sqlitebrowser.org/)
            3. Or import into data analysis tools that support SQLite
            
            Database Tables:
            • activity_sessions: Individual workout/activity session data
            • category_sessions: Category completion tracking
            
            The database contains all your session history, completion statistics, and performance metrics.
            
            Generated by Activity Tracker App
        """.trimIndent()
    }
}